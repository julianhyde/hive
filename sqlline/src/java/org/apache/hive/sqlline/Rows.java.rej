***************
*** 27,45 ****
  import java.sql.SQLException;
  import java.text.DecimalFormat;
  import java.text.NumberFormat;
  import java.util.Iterator;
  
  /**
   * Abstract base class representing a set of rows to be displayed.
   */
  abstract class Rows implements Iterator {
    private final SqlLine sqlLine;
    final ResultSetMetaData rsMeta;
    final Boolean[] primaryKeys;
    final NumberFormat numberFormat;
  
    Rows(SqlLine sqlLine, ResultSet rs) throws SQLException {
      this.sqlLine = sqlLine;
      rsMeta = rs.getMetaData();
      int count = rsMeta.getColumnCount();
      primaryKeys = new Boolean[count];
--- 27,49 ----
  import java.sql.SQLException;
  import java.text.DecimalFormat;
  import java.text.NumberFormat;
+ import java.util.Arrays;
  import java.util.Iterator;
  
  /**
   * Abstract base class representing a set of rows to be displayed.
+  * Holds column values as strings
   */
  abstract class Rows implements Iterator {
    private final SqlLine sqlLine;
    final ResultSetMetaData rsMeta;
    final Boolean[] primaryKeys;
    final NumberFormat numberFormat;
+   private final String nullStr;
  
    Rows(SqlLine sqlLine, ResultSet rs) throws SQLException {
      this.sqlLine = sqlLine;
+     nullStr = sqlLine.getOpts().getNullString();
      rsMeta = rs.getMetaData();
      int count = rsMeta.getColumnCount();
      primaryKeys = new Boolean[count];
***************
*** 125,130 ****
        inserted = false;
      }
  
  
      Row(int size, ResultSet rs) throws SQLException {
        isMeta = false;
--- 129,138 ----
        inserted = false;
      }
  
+     @Override
+     public String toString(){
+       return Arrays.asList(values).toString();
+     }
  
      Row(int size, ResultSet rs) throws SQLException {
        isMeta = false;
***************
*** 157,163 ****
          } else {
            values[i] = rs.getString(i + 1);
          }
-         sizes[i] = values[i] == null ? 1 : values[i].length();
        }
      }
    }
--- 165,172 ----
          } else {
            values[i] = rs.getString(i + 1);
          }
+         values[i] = values[i] == null ? nullStr : values[i];
+         sizes[i] = values[i].length();
        }
      }
    }
